{"version":3,"sources":["components/AddCategory.js","GifGridItem.js","helpers/getGifs.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAElC,OACI,sBAAKC,UAAU,wCAAf,UACI,qBAAKC,IAAOF,EAAMG,IAAMJ,IACxB,kCAAMA,EAAN,W,uBCNCK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,+DAGIG,MAAOR,GAHX,cAGbS,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAcZY,GAdY,4CAAH,sDCGPM,EAAU,SAAC,GAAoB,IAAjBb,EAAgB,EAAhBA,SAEvB,ECFwB,SAAEA,GAE1B,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEHlB,EAASC,GACRkB,MAAM,SAAAT,GACHO,EAAU,CACNV,KAAMG,EACNK,SAAS,SAIlB,CAACd,IAEDe,EDjB0BI,CAAcnB,GAAlCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAGrB,OACI,qCACI,qBAAIlB,UAAU,mCAAd,cAAoDI,EAApD,OACEc,GAAW,mBAAGlB,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQe,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADEA,EAAIC,aEbtBU,EAAe,WAExB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ0C,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCX9BsB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e67b4c64.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories( cat => [ inputValue, ...cat ] );\r\n            setinputValue('');\r\n        };\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    )   \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__jello\">\r\n            <img src= { url } alt={ title }></img>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=gmfB0iCogBprZww9KyG1nrVX4u2P7Tle`;\r\n    const response = await fetch( url );\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from \"./hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ( { category } ) => { \r\n\r\n    const { data:images, loading } = useFetchGifs( category );     \r\n\r\n    // getGifs();\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__flash\"> { category } </h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key= { img.id }\r\n                        { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n            getGifs( category )\r\n            .then( img => {\r\n                setState( {\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n            });\r\n                \r\n        }, [category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import { useState } from \"react/cjs/react.development\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Spiderman']);\r\n\r\n    return(\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                        key= {category}\r\n                        category= {category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}